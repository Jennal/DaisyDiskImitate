@page "/"
@using DiskUsage
@inject IJSRuntime jsruntime;
@implements IProgressUpdater

@* <Highchart Json="@chartjson" /> *@

<DirectoryChooser @ref="_directoryChooser" OnValueChanged="@OnDirChanged" />
<ProgressBar @ref="_progressBar" />
<Highchart @ref="_highchart" />

@code{
    private DirectoryChooser _directoryChooser;
    private ProgressBar _progressBar;
    private Highchart _highchart;
    
    private DiskItem _diskItem;

    private string Progress = "0%";

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        // await jsruntime.InvokeVoidAsync("drawPie", "container");
        await base.OnAfterRenderAsync(firstRender);
    }

    private void OnDirChanged(string path)
    {
        _diskItem = new DiskItem(path, this);
        _diskItem.FillSize();
    }

    public void Update()
    {
        _progressBar.Progress = _diskItem.Progress;
        if (_diskItem.IsFilled)
        {
            _highchart.SetData(_diskItem);       
        }
    }

}